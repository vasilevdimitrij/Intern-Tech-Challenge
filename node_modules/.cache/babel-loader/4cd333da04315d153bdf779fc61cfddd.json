{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\vasil\\\\Desktop\\\\ass\\\\hotelreviewer-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nfunction fetchData(dataSource) {\n  var data, dataJSON;\n  return _regeneratorRuntime.async(function fetchData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(dataSource));\n\n        case 3:\n          data = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(data.json());\n\n        case 6:\n          dataJSON = _context.sent;\n\n          if (!dataJSON) {\n            _context.next = 11;\n            break;\n          }\n\n          _context.next = 10;\n          return _regeneratorRuntime.awrap({\n            data: dataJSON,\n            error: false\n          });\n\n        case 10:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", {\n            data: false,\n            error: _context.t0.message\n          });\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 13]]);\n}\n\nfunction postData(dataSource, content) {\n  var data, dataJSON;\n  return _regeneratorRuntime.async(function postData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetch(dataSource, {\n            method: 'POST',\n            body: JSON.stringify(content)\n          }));\n\n        case 3:\n          data = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(data.json());\n\n        case 6:\n          dataJSON = _context2.sent;\n\n          if (!dataJSON) {\n            _context2.next = 11;\n            break;\n          }\n\n          _context2.next = 10;\n          return _regeneratorRuntime.awrap({\n            data: dataJSON,\n            error: false\n          });\n\n        case 10:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 11:\n          _context2.next = 16;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", {\n            data: false,\n            error: _context2.t0.message\n          });\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 13]]);\n}\n\nvar Api = {\n  fetchData: fetchData,\n  postData: postData\n};\nexport { Api as default };","map":{"version":3,"sources":["C:/Users/vasil/Desktop/ass/hotelreviewer-main/src/api.js"],"names":["fetchData","dataSource","fetch","data","json","dataJSON","error","message","postData","content","method","body","JSON","stringify","Api","default"],"mappings":";;AAAA,SAAeA,SAAf,CAAyBC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEuBC,KAAK,CAACD,UAAD,CAF5B;;AAAA;AAEUE,UAAAA,IAFV;AAAA;AAAA,2CAG2BA,IAAI,CAACC,IAAL,EAH3B;;AAAA;AAGUC,UAAAA,QAHV;;AAAA,eAKQA,QALR;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAMmB;AAAEF,YAAAA,IAAI,EAAEE,QAAR;AAAkBC,YAAAA,KAAK,EAAE;AAAzB,WANnB;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,2CASW;AAAEH,YAAAA,IAAI,EAAE,KAAR;AAAeG,YAAAA,KAAK,EAAE,YAAMC;AAA5B,WATX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAeC,QAAf,CAAwBP,UAAxB,EAAoCQ,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEuBP,KAAK,CAACD,UAAD,EAAa;AACnCS,YAAAA,MAAM,EAAE,MAD2B;AAEnCC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf;AAF6B,WAAb,CAF5B;;AAAA;AAEUN,UAAAA,IAFV;AAAA;AAAA,2CAM2BA,IAAI,CAACC,IAAL,EAN3B;;AAAA;AAMUC,UAAAA,QANV;;AAAA,eAQQA,QARR;AAAA;AAAA;AAAA;;AAAA;AAAA,2CASmB;AAAEF,YAAAA,IAAI,EAAEE,QAAR;AAAkBC,YAAAA,KAAK,EAAE;AAAzB,WATnB;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,4CAYW;AAAEH,YAAAA,IAAI,EAAE,KAAR;AAAeG,YAAAA,KAAK,EAAE,aAAMC;AAA5B,WAZX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,IAAMO,GAAG,GAAG;AACVd,EAAAA,SAAS,EAATA,SADU;AAEVQ,EAAAA,QAAQ,EAARA;AAFU,CAAZ;AAKA,SAASM,GAAG,IAAIC,OAAhB","sourcesContent":["async function fetchData(dataSource) {\n  try {\n    const data = await fetch(dataSource);\n    const dataJSON = await data.json();\n\n    if (dataJSON) {\n      return await { data: dataJSON, error: false };\n    }\n  } catch (error) {\n    return { data: false, error: error.message };\n  }\n}\n\nasync function postData(dataSource, content) {\n  try {\n    const data = await fetch(dataSource, {\n      method: 'POST',\n      body: JSON.stringify(content),\n    });\n    const dataJSON = await data.json();\n\n    if (dataJSON) {\n      return await { data: dataJSON, error: false };\n    }\n  } catch (error) {\n    return { data: false, error: error.message };\n  }\n}\n\nconst Api = {\n  fetchData,\n  postData,\n};\n\nexport { Api as default };\n"]},"metadata":{},"sourceType":"module"}